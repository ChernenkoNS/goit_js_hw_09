{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXGO,SAASC,cAAc,QAe/BC,iBAAiB,UAAUC,IACjCA,EAAEC,iBAEF,MAAMX,EAAQU,EAAEE,cAAcZ,MAAMa,MAC9BC,EAAOJ,EAAEE,cAAcE,KAAKD,MAC5BE,EAASL,EAAEE,cAAcG,OAAOF,MAEtCG,EAAIhB,EAAOc,EAAMC,EAAO,IAG1B,MAAMC,EAAM,CAACC,EAAOH,EAAMC,KACxB,MAAMG,EAAMb,KAAKc,MAAMJ,GACvB,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAKE,GAAK,EAC5BtB,EAAcsB,EAAI,EAAGf,KAAKc,MAAMF,GAASZ,KAAKc,MAAML,GAAQM,GACzDC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoB3B,QAAeC,MAAU,GAE/C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const delay = e.currentTarget.delay.value;\n  const step = e.currentTarget.step.value;\n  const amount = e.currentTarget.amount.value;\n\n  fun(delay, step, amount);\n});\n\nconst fun = (delay, step, amount) => {\n  const max = Math.floor(amount);\n  for (let i = 0; i < max; i += 1) {\n    createPromise(i + 1, Math.floor(delay) + Math.floor(step) * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","currentTarget","value","step","amount","$47d4ff9957288465$var$fun","delay1","max","floor","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.fca37207.js.map"}